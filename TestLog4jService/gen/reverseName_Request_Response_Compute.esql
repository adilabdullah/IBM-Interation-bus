BROKER SCHEMA gen
CREATE FUNCTION initLog4j( IN CONFIG_FILE_NAME CHARACTER ) RETURNS BOOLEAN LANGUAGE JAVA EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";
CREATE FUNCTION log4j( IN COMPONENT_NAME CHARACTER,      IN LEVEL CHARACTER,      IN TEXT CHARACTER ) RETURNS BOOLEAN LANGUAGE JAVA EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";
CREATE FUNCTION log4j_1_1( IN COMPONENT_NAME CHARACTER,      IN LOGGER_NAME CHARACTER,      IN LEVEL CHARACTER,      IN TEXT CHARACTER ) RETURNS BOOLEAN LANGUAGE JAVA EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";

DECLARE ns NAMESPACE 'http://TestLog4jService';


CREATE COMPUTE MODULE reverseName_Request_Response_Compute
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

DECLARE rc BOOLEAN; 
		CALL initLog4j('brokerlog.xml') 
		INTO rc; 
		IF (  rc = FALSE ) THEN 
	   	
		END IF;
		
		--CALL log4j('SimpleLog4j', 'INFO','Message from ESQL') 
		
	--	INTO rc; 
		
		--IF ( rc = FALSE ) THEN 
			set OutputRoot.XMLNSC.ns:reverseNameResponse.reverseName=REPLACE(InputRoot.XMLNSC.ns:reverseName.name,'adil','abdullah');
--		CALL log4j_1_1('TestLog4jService', 'service', 'INFO',ASBITSTREAM(InputRoot.XMLNSC.ns:reverseName.name,InputRoot.Properties.Encoding,
--		InputRoot.Properties.CodedCharSetId,'','','','')) INTO rc;
		
	--	CALL log4j_1_1('TestLog4jService', 'service', 'INFO',ASBITSTREAM(InputRoot.XMLNSC.ns:reverseName.name)) INTO rc;

		CALL log4j_1_1('TestLog4jService', 'service', 'INFO',ASBITSTREAM(InputBody)) INTO rc;

--END IF;
		


		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
